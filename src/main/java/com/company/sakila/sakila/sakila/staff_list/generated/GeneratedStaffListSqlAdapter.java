package com.company.sakila.sakila.sakila.staff_list.generated;

import com.company.sakila.sakila.sakila.staff_list.StaffList;
import com.company.sakila.sakila.sakila.staff_list.StaffListImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.annotation.ExecuteBefore;
import com.speedment.common.injector.annotation.WithState;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.sql.SqlPersistenceComponent;
import com.speedment.runtime.core.component.sql.SqlStreamSupplierComponent;
import com.speedment.runtime.core.exception.SpeedmentException;
import java.sql.ResultSet;
import java.sql.SQLException;
import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.company.sakila.sakila.sakila.staff_list.StaffList} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedStaffListSqlAdapter {
    
    private final TableIdentifier<StaffList> tableIdentifier;
    
    protected GeneratedStaffListSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("sakila", "sakila", "staff_list");
    }
    
    @ExecuteBefore(RESOLVED)
    void installMethodName(@WithState(RESOLVED) SqlStreamSupplierComponent streamSupplierComponent,
            @WithState(RESOLVED) SqlPersistenceComponent persistenceComponent) {
        streamSupplierComponent.install(tableIdentifier, this::apply);
        persistenceComponent.install(tableIdentifier);
    }
    
    protected StaffList apply(ResultSet resultSet) throws SpeedmentException {
        final StaffList entity = createEntity();
        try {
            entity.setId(      resultSet.getShort(1)  );
            entity.setName(    resultSet.getString(2) );
            entity.setAddress( resultSet.getString(3) );
            entity.setZipCode( resultSet.getString(4) );
            entity.setPhone(   resultSet.getString(5) );
            entity.setCity(    resultSet.getString(6) );
            entity.setCountry( resultSet.getString(7) );
            entity.setSid(     resultSet.getShort(8)  );
        } catch (final SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return entity;
    }
    
    protected StaffListImpl createEntity() {
        return new StaffListImpl();
    }
}